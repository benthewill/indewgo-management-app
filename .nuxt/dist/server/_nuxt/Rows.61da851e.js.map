{"version":3,"file":"Rows.61da851e.js","sources":["../../../../components/tables/SimpleDetails.vue","../../../../composables/currencyConvert.ts","../../../../composables/grouping.ts","../../../../composables/capitalize.ts","../../../../composables/durationCalculation.ts","../../../../composables/taxCalculation.ts","../../../../composables/daysOfWeek.ts","../../../../composables/nameRate.ts","../../../../components/tables/row/DailyRow.vue","../../../../components/tables/SimpleDailyRates.vue","../../../../components/tables/row/MonthlyRow.vue","../../../../components/tables/SimpleMonthlyRates.vue","../../../../components/tables/Rows.vue"],"sourcesContent":["<script>\nexport default {\n  props: ['address', 'index', 'contacts']\n}\n\n</script>\n\n<template>\n  <div class=\"column is-three-quarters-widescreen is-full-desktop is-full-tablet\">\n\n      <div class=\"columns\">\n\n        <div class=\"column\">\n          <p>\n            <span class=\"heading \">\n              Gated:<br>\n            </span>\n            <span v-if=\"address.node.gated\">\n              True\n            </span>\n            <span v-if=\"!address.node.gated\">\n              False\n            </span>\n          </p>\n        </div>\n\n        <div class=\"column\">\n          <p>\n            <span class=\"heading\">\n              Lot Type:<br>\n            </span>\n            <span v-for=\"n in address.node.parking_lot_type\">\n              {{ n }}&hairsp;\n            </span>\n          </p>\n        </div>\n\n        <div class=\"column\">\n          <p>\n            <span class=\"heading\">\n              Hours:<br>\n            </span>\n            <span v-if=\"address.node.gate_hour_from === null && address.node.gate_hour_to === null\">Open 24/7</span>\n            <span v-if=\"address.node.gate_hour_from && address.node.gate_hour_to\">{{address.node.gate_hour_from}} to {{ address.node.gate_hour_to }} </span>\n          </p>\n        </div>\n\n        <div class=\"column\">\n          <p>\n            <span class=\"heading\">\n              Lot Contacts:<br>\n            </span>\n            <span v-for=\"ext in contacts.curatedExternalContacts\">\n              {{ext.node.external_contacts.first_name}} {{ext.node.external_contacts.last_name}}<br>\n            </span>\n          </p>\n        </div>\n\n        <div class=\"column\">\n          <p>\n            <span class=\"heading\">\n              Lot Managers:<br>\n            </span>\n            <span v-for=\"ext in contacts.curatedInternalContacts\">\n              {{ext.node.internal_members.first_name}} {{ext.node.internal_members.last_name}}<br>\n            </span>\n          </p>\n        </div>\n\n\n      </div>\n  </div>\n</template>\n\n<style>\n\n</style>\n","export default (amount:number) :string => {\n    let localString = amount.toLocaleString()\n\n    let split = localString.split('.')\n\n    let num = split[0]\n\n    let dec = split[1] ? split[1] : '00'\n    dec = dec.length > 1 ? dec : dec += '0'\n    dec = dec.length > 2 ? dec.split('')[0] + dec.split('')[1] : dec\n\n    return num + '.' + dec\n}\n\nlet test = 500\nlet locale = test.toLocaleString()\nlet splitted = locale.split('.')\n\nfunction splitting (amount:number) {\n    let localString = amount.toLocaleString()\n\n    let split = localString.split('.')\n\n    let num = split[0]\n\n    let dec = split[1] ? split[1] : '00'\n    dec = dec.length > 1 ? dec : dec += '0'\n    dec = dec.length > 2 ? dec.split('')[0] + dec.split('')[1] : dec\n\n    return num + '.' + dec\n}\n\nlet testContent = splitting(162.18)\nconsole.log( testContent)","export default (arr, comp) => {\n    let compItems = []\n    for (let x of arr) {\n        x.node[comp].forEach(i => compItems.push(i))\n    }\n    compItems = [...new Set(compItems)]\n    let output = compItems.map((x) => {\n        return {[comp]: x, contents: []}\n    })\n\n    for (let c of compItems) {\n        let z = arr.filter(n => n.node[comp].includes(c))\n        let a = output.filter(o => o[comp] === c)[0]\n        a.contents = z\n    }\n\n    return output\n}","export default (text:string, config:object) => {\n    let textArr = text.split(' ')\n    let newArr = []\n    for (let tx of textArr){\n        let newTx = tx[0].toUpperCase() + tx.slice(1)\n        newArr.push(newTx)\n    }\n    return newArr.join(' ')\n}","export default (time) => {\n    function timeToDuration(item) {\n        let regexDays = new RegExp(/\\d\\d:\\d\\d:\\d\\d/)\n        let check = item.match(regexDays)\n        let spl = item\n        let dayCheck = ''\n\n        let hourOutput, minuteOutput, finalOutput\n\n\n        // BOTH DAY(S) AND TIMESTAMP\n        if (check !== null && (item.match(/day/) ) !== null) {\n            spl = check[0]\n            dayCheck = item.split(' ').slice(0,2).join(' ')\n            spl = spl.split(':')\n            hourOutput = output(String(spl[0]), 'hr')\n            minuteOutput = output(String(spl[1]), 'min')\n            finalOutput = `${dayCheck} ${hourOutput} ${minuteOutput}`\n        }\n\n\n        // JUST THE DAY(S)\n        else if ((item.match(/day/) ) !== null && check === null) {\n            finalOutput = item\n        }\n        else {\n            spl = spl.split(':')\n            hourOutput = output(String(spl[0]), 'hr')\n            minuteOutput = output(String(spl[1]), 'min')\n            finalOutput = `${hourOutput} ${minuteOutput}`\n        }\n\n\n\n        function output (timeElement: String, unit: 'hr' | 'min'): string {\n            if (isNaN(Number(timeElement))){\n                throw new Error(`${timeElement} is not an actual Number.`)\n            }\n            if (timeElement.length > 2){\n                throw new Error(`${timeElement} is not a valid Number.`)\n            }\n\n            let timeOutput = timeElement !== '00' ? timeElement : null\n            if (timeOutput) {\n                timeOutput = timeOutput[0] === '0' ? timeOutput.slice(1) : timeOutput\n                let unitOutput = Number(timeOutput) > 1 ? unit += 's' : unit\n                return `${timeOutput} ${unitOutput}`\n            }\n            return ''\n        }\n\n\n        return finalOutput\n    }\n\n    return timeToDuration(time)\n}\n\n\n","export default (amount:number, taxes:number[]):number => {\n\n        let finalPrice = Number(amount)\n        for(let tax of taxes){\n            finalPrice += (finalPrice * tax)\n        }\n\n        return finalPrice\n}\n\n\n// function calc (amount, taxes)  {\n//\n//     let finalPrice = amount\n//     for(let tax of taxes){\n//         finalPrice += (finalPrice * tax)\n//     }\n//\n//     return finalPrice\n// }\n//\n// let calc1 = calc(\"150\", [0.02,0.06,0.00])\n// console.log( calc1)","export default (arr) => {\n\n    let dow = {\n        Mon: 1,\n        Tue: 2,\n        Wed: 3,\n        Thu: 4,\n        Fri: 5,\n        Sat: 6,\n        Sun: 7\n    }\n\n    let output\n\n    const range = (start, stop, step) => Array.from({ length: (stop - start) / step + 1}, (n, i) => start + (i * step));\n    const arrFill = range(arr[0],arr[arr.length-1],1)\n\n    function seq(check, start) {\n        let param = {status: true, ends: 0}\n\n        for (let i = start, j = check[start]; i < check.length; i++) {\n            console.log(check[i])\n            console.log(j)\n            if (check[i] !== j) {\n                param.status = false\n                param.ends = i\n                break\n            } else {\n                param.ends = i\n            }\n            j++\n        }\n\n        return param\n    }\n\n    let details = []\n    let getDay = (i) => Object.keys(dow).find(key => dow[key] === arr[i])\n\n    let period = `${getDay(0)} to ${getDay(arr.length - 1)}`\n    let totalDays = arr.length\n\n    if (JSON.stringify(arrFill) !== JSON.stringify(arr)){\n        output = 'skipped'\n        console.log(arr)\n\n        let done = false\n        let startingPoint = 0\n\n        while (done === false) {\n            let checking = seq(arr,startingPoint)\n            console.log(checking)\n            if (checking.status === false) {\n                startingPoint = checking.ends\n                details.push(checking.ends)\n            } else {\n                done = true\n            }\n        }\n\n        period = `${getDay(0)} to ${getDay(details[0] -1)}, and ${getDay(details[0])} to ${getDay(arr.length - 1)}`\n\n        return {period, totalDays}\n    }\n\n    if (arr.length === 7) {\n        period = 'Everyday'\n    }\n\n    return {\n        period,\n        totalDays\n    }\n}\n\n","export default (hourFrom:number, hourTo:number, verbalizedDays:any, dayLength:any) => {\n    let conv = (x:any) => {\n        let getNum = x === 0 ? '12 AM' : (x > 12 ? x-12 + \" PM\" : x + \" AM\")\n        return getNum\n    }\n\n    if ((hourFrom === 0 && hourTo === 24) && dayLength.length === 7){\n        return `24/7`\n    } else if ((hourFrom !== 0 || hourTo !== 24) && dayLength.length === 7) {\n        return `${conv(hourFrom)} to ${conv(hourTo)}, ${verbalizedDays}`\n    } else {\n        return `${conv(hourFrom)} to ${conv(hourTo)}, ${verbalizedDays}`\n    }\n}","<script>\n  import durationCalculation from \"../../../composables/durationCalculation\";\n\n  export default {\n    props: ['content', 'taxes'],\n    setup() {\n      const durationConvert = (x) => durationCalculation(x);\n      const currencyZeros = (x) => currencyConvert(x)\n      const taxesCalculation = (x,y) => taxCalculation(x,y)\n      const capitalizeText = (x) => capitalize(x)\n      const verbalizeDays = (x) => daysOfWeek(x)\n      const namingRate = (x,y,z,a) => nameRate(x,y,z,a)\n\n\n      return {\n        durationConvert,\n        currencyZeros,\n        capitalizeText,\n        taxesCalculation,\n        namingRate,\n        verbalizeDays\n      }\n    }\n  }\n</script>\n\n<template>\n  <div class=\"list pt-0 px-1 has-hoverable-list-items\" v-for=\"rateItem in content\">\n    <div class=\"list-item\">\n      <div class=\"list-item-content\">\n        <div class=\"columns is-narrow pl-1\">\n\n\n          <div class=\"column \">\n            <p><span class=\"heading\">Duration</span>\n              <span class=\"subtitle is-6\">{{durationConvert(rateItem.node.duration)}}</span></p>\n          </div>\n\n\n          <div class=\"column \">\n            <p><span class=\"heading\">Price</span>\n              <span class=\"subtitle is-6\">$ {{currencyZeros(rateItem.node.base_price)}}</span></p>\n          </div>\n\n\n\n          <div class=\"column \">\n            <p><span class=\"heading\">Availability</span>\n              <span class=\"subtitle is-6\" v-if=\"rateItem.node.daily_rates_availabilityCollection.edges.length === 0\">\n                N/A\n              </span>\n\n              <div class=\"tags are-small\">\n                <span class=\"tag is-success is-light\" v-for=\"item in rateItem.node.daily_rates_availabilityCollection.edges\">\n\n                    <span v-if=\"item\">\n                      {{  verbalizeDays(item.node.days_of_the_week).period  }}&hairsp;\n                    </span>\n\n                  </span>\n              </div>\n\n            </p>\n          </div>\n\n\n          <div class=\"column \">\n            <p><span class=\"heading\">Clearance</span>\n              <span class=\"subtitle is-6\">SU UG</span></p>\n          </div>\n\n\n          <div class=\"column \">\n            <p><span class=\"heading\">Placeholder</span>\n              <span class=\"subtitle is-6\">true</span></p>\n          </div>\n\n\n\n\n        </div>\n      </div>\n    </div>\n  </div>\n</template>","<script>\nimport durationCalculation from \"../../composables/durationCalculation\";\nimport DailyRow from \"./row/DailyRow\";\nimport {ref} from \"vue\";\n\nexport default {\n  components: {DailyRow},\n  props: ['daily', 'index', 'cityDetails'],\n  setup() {\n    const durationConvert = (x) => durationCalculation(x);\n    const currencyZeros = (x) => currencyConvert(x)\n    const groupContents = (x,y) => grouping(x,y)\n\n    return {\n      durationConvert,\n      currencyZeros,\n      groupContents\n    }\n  },\n  data() {\n    return {\n      groupingMethod: ref(\"rate_allowance\")\n    }\n  },\n  methods: {\n    capitalize(text, config){\n      let textArr = text.split(' ')\n      let newArr = []\n      for (let tx of textArr){\n        let newTx = tx[0].toUpperCase() + tx.slice(1)\n        newArr.push(newTx)\n      }\n      return newArr.join(' ')\n    },\n    alterGroupingMethod(method){\n      this.groupingMethod = method\n    }\n  },\n  computed: {\n    getMethods() {\n      let paymentMethods = []\n\n      this.daily.forEach((item) => {\n        let method = item.node.daily_rate_payment_methodsCollection.edges\n\n        if (method.length) {\n\n          let methodName = method.map(n => n.node.daily_rate_payment_method_types.payment_method_type_name)\n\n          paymentMethods.push(methodName)\n        }\n      })\n\n      let flattenPM = paymentMethods.flat()\n      let pmSet = [...new Set(flattenPM)]\n\n      return pmSet\n    }\n  }\n}\n\n</script>\n\n<template>\n  <div class=\"column mx-3\">\n    <div class=\"is-narrow\">\n\n      <div class=\"level is-mobile\">\n        <div class=\"level-left\">\n          <div class=\"level-item\">\n            <p class=\"subtitle is-5 pl-2 has-text-weight-semibold \">\n              Daily Parking\n              <span class=\"is-size-6 has-text-weight-light\">({{daily.length}})</span>\n            </p>\n          </div>\n        </div>\n        <div class=\"level-right\">\n          <div class=\"level-item\">\n            <p class=\"button is-small  is-info\" @click=\"alterGroupingMethod('clearance_lot_types')\">Function</p>\n          </div>\n          <div class=\"level-item\">\n            <p class=\"button is-small   is-info\" @click=\"alterGroupingMethod('rate_allowance')\">Process</p>\n          </div>\n        </div>\n      </div>\n\n\n      <div v-if=\"!daily.length\">\n        <div class=\"block p-2\">\n          <p class=\" title is-5\">No daily parking available.</p>\n        </div>\n      </div>\n\n      <div v-if=\"daily.length\">\n\n\n        <div class=\"block px-2 is-hidden-mobile\">\n          <div class=\"columns\">\n            <div class=\"column\">\n              <p class=\"heading  \">\n                Payment\n              </p>\n              <div class=\"tags are-small\" >\n                <span class=\"tag is-warning is-light\" v-for=\"method in getMethods\">\n                  {{method}}\n                </span>\n              </div>\n            </div>\n\n            <div class=\"is-divider-vertical addingPadd\"></div>\n\n            <div class=\"column\">\n              <p class=\"heading \">\n                Areas\n              </p>\n              <div v-for=\"method in getMethods\">\n                <p class=\"is-size-7\">\n                  {{method}}\n                </p>\n              </div>\n            </div>\n\n            <div class=\"is-divider-vertical addingPadd\"></div>\n\n            <div class=\"column\">\n              <p class=\"heading \">\n                Details\n              </p>\n              <div>\n                <p class=\"is-size-7\">\n                  Additional Details Here. Maybe stuff currently not befitting other locations.\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n\n        <div class=\"block px-2 py-5 cleanBordering\" v-for=\"rate in groupContents(daily, groupingMethod)\">\n          <p class=\"subtitle is-5 has-text-weight-semibold pl-3 pb-0 has-text-grey\">\n            {{capitalize(rate[groupingMethod])}} Rates\n          </p>\n          <daily-row :content=\"rate.contents\" :taxes=\"cityDetails\"></daily-row>\n        </div>\n\n      </div>\n\n    </div>\n  </div>\n</template>\n\n<style>\n  .dailyRates{\n    display: flex;\n    flex-direction: row;\n  }\n  .dailyRatesColumns {\n    width: 100%;\n  }\n\n\n</style>","<script>\n  export default {\n    props: ['content', 'taxes'],\n    setup() {\n      const currencyZeros = (x) => currencyConvert(x)\n      const taxesCalculation = (x,y) => taxCalculation(x,y)\n      const groupContents = (x,y) => grouping(x,y)\n      const verbalizeDays = (x) => daysOfWeek(x)\n      const capitalizeText = (x) => capitalize(x)\n      const namingRate = (x,y,z,a) => nameRate(x,y,z,a)\n\n      return {\n        currencyZeros,\n        taxesCalculation,\n        groupContents,\n        verbalizeDays,\n        capitalizeText,\n        namingRate\n      }\n    },\n    methods: {\n\n    }\n  }\n</script>\n\n<template>\n  <div class=\"list pt-0 px-1 has-hoverable-list-items\" v-for=\"rateItem in content\">\n    <div class=\"list-item\">\n      <div class=\"list-item-content\">\n        <div class=\"list-item-title\">\n          <div class=\"level\">\n            <div class=\"level-left\">\n              <div class=\"level-item\">\n                <p class=\"subtitle is-6\">\n                  {{ capitalizeText(rateItem.node.monthly_rates_type.rate_name)  }} -\n                  {{ namingRate(\n                    rateItem.node.rate_hour_from,\n                    rateItem.node.rate_hour_to,\n                    verbalizeDays(rateItem.node.rate_days).period,\n                    rateItem.node.rate_days) }}\n                </p>\n              </div>\n            </div>\n            <div class=\"level-right\">\n              <div class=\"level-item\">\n                <p class=\"button is-small is-inverted is-info\">Functions</p>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"list-item-description\">\n          <div class=\"columns is-narrow pt-1 pl-1\">\n            <div class=\"column \">\n              <p><span class=\"heading\">Pre-Tax</span>\n                <span class=\"subtitle is-6\">$ {{currencyZeros(rateItem.node.base_price)}}</span></p>\n            </div>\n            <div class=\"column\">\n              <p><span class=\"heading\">Price</span>\n                <span class=\"subtitle is-6\">$ {{  currencyZeros(taxesCalculation(rateItem.node.base_price, [taxes.provincial_transport_tax, taxes.goods_and_services_tax, taxes.additional_tax]))  }}</span>\n              </p>\n            </div>\n            <div class=\"column \">\n              <p><span class=\"heading\">Clearance</span>\n                <span class=\"subtitle is-6\" v-for=\"n in rateItem.node.clearance_lot_types\"> {{ n }}&nbsp;</span></p>\n            </div>\n            <div class=\"column \">\n              <p><span class=\"heading\">Access</span>\n                <span class=\"subtitle is-6\" v-if=\"rateItem.node.monthly_rates_accessCollection.edges.length\" v-for=\"n in rateItem.node.monthly_rates_accessCollection.edges\"> {{ capitalizeText(n.node.parking_lots_access_methods.method_name) }}&nbsp;</span>\n                <span class=\"subtitle is-6\" v-if=\"!rateItem.node.monthly_rates_accessCollection.edges.length\">No Access Required</span>\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>","<script>\nimport MonthlyRow from \"./row/MonthlyRow\";\nimport {ref} from 'vue'\nexport default {\n  components: {MonthlyRow},\n  props: ['monthly','cityDetails'],\n  setup() {\n    const groupContents = (x,y) => grouping(x,y)\n    const capitalizeText = (x) => capitalize(x)\n    return {\n      groupContents,\n      capitalizeText\n    }\n  },\n  data() {\n    return {\n      groupingMethod: ref(\"rate_allowance\")\n    }\n  },\n  methods: {\n    alterGroupingMethod(method){\n      this.groupingMethod = method\n    }\n  },\n  computed: {\n\n  }\n}\n</script>\n\n<template>\n  <div class=\"column mx-3\">\n    <div class=\"level is-mobile\">\n      <div class=\"level-left\">\n        <div class=\"level-item\">\n          <p class=\"subtitle is-5 pl-2 has-text-weight-semibold \">\n            Monthly Parking\n          </p>\n        </div>\n      </div>\n      <div class=\"level-right\">\n        <div class=\"level-item\">\n          <p class=\"button is-small  is-info\" @click=\"alterGroupingMethod('clearance_lot_types')\">Function</p>\n        </div>\n        <div class=\"level-item\">\n          <p class=\"button is-small   is-info\" @click=\"alterGroupingMethod('rate_allowance')\">Process</p>\n        </div>\n      </div>\n    </div>\n\n    <div v-if=\"!monthly.length\">\n      <div class=\"block p-2\">\n        <p class=\" title is-5\">No monthly parking available.</p>\n      </div>\n    </div>\n\n    <div v-if=\"monthly.length\">\n\n      <div class=\"block px-2 is-hidden-mobile\">\n        <div class=\"columns\">\n          <div class=\"column\">\n            <p class=\"heading\">\n              Details\n            </p>\n            <div>\n              <p class=\"is-size-7\">\n                Additional Details Here. Maybe stuff currently not befitting other locations.\n              </p>\n            </div>\n          </div>\n\n          <div class=\"is-divider-vertical addingPadd\"></div>\n\n          <div class=\"column\">\n            <p class=\"heading\">\n              Details 2\n            </p>\n            <div>\n              <p class=\"is-size-7\">\n                Maybe this part of the detail is related to something else.\n              </p>\n            </div>\n          </div>\n\n          <div class=\"is-divider-vertical addingPadd\"></div>\n\n          <div class=\"column\">\n            <p class=\"heading\">\n              Details 3\n            </p>\n            <div>\n              <p class=\"is-size-7\">\n                Maybe this part of the detail is related to something else.\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n\n\n\n      <div class=\"block px-2 py-5 cleanBordering\" v-for=\"rate in groupContents(monthly, groupingMethod)\">\n        <p class=\"subtitle is-5 has-text-weight-semibold pl-3 pb-0 has-text-grey\">\n          {{capitalizeText(rate[groupingMethod])}} Rates\n        </p>\n        <monthly-row :content=\"rate.contents\" :taxes=\"cityDetails\"></monthly-row>\n      </div>\n    </div>\n\n\n  </div>\n</template>\n","<script>\nimport SimpleDetails from \"./SimpleDetails\";\nimport SimpleDailyRates from \"./SimpleDailyRates\";\nimport SimpleMonthlyRates from \"./SimpleMonthlyRates\";\nexport default {\n  components: {SimpleMonthlyRates, SimpleDailyRates, SimpleDetails},\n  props: ['lotDetails'],\n  computed: {\n    addressColl() {\n      const getEdges = this.lotDetails.parking_lots_addressCollection\n      const curatedAddresses = [...getEdges.edges]\n      const getLength = {...getEdges}\n\n      const cityNames = () => {\n        let cityDetails = curatedAddresses[0]\n        cityDetails = {...cityDetails}\n        cityDetails = {...cityDetails.node}\n        cityDetails = {...cityDetails.city_details}\n        cityDetails = cityDetails.city_name\n\n        return cityDetails\n      }\n\n      const addressesList = () => {\n        return curatedAddresses.map((item) => {\n          let addrDetailed = {\n            streetNum: item.node.street_number,\n            streetName: item.node.street_name,\n            streetPostal: item.node.street_postal_code\n          }\n\n          return `${addrDetailed.streetNum} ${addrDetailed.streetName} St, ${addrDetailed.streetPostal}`\n        })\n      }\n\n      // console.log(JSON.stringify(getLength))\n\n      return {\n        curatedAddresses,\n        city : cityNames(),\n        addressesList: addressesList(),\n        getLength\n      }\n    },\n    contactsColl() {\n      const getEdgesExternal = this.lotDetails.parking_lots_external_contactsCollection\n      const curatedExternalContacts = [...getEdgesExternal.edges]\n\n      const getEdgesInternal = this.lotDetails.parking_lots_internal_contactsCollection\n      const curatedInternalContacts = [...getEdgesInternal.edges]\n\n      return {\n        curatedExternalContacts,\n        curatedInternalContacts\n      }\n    }\n  }\n}\n</script>\n<template>\n  <div class=\"card py-3 px-4 mt-5 mb-6 rounding is-shadowless\">\n\n<!--    NAME AND NUMBER-->\n    <div class=\"sticky has-background-white\">\n\n      <div class=\"card-header pt-2 is-shadowless is-inline-tablet-only is-inline-touch \">\n        <div class=\"card-header-title \">\n                <p class=\"title is-5 has-text-weight-semibold\">Lot {{lotDetails.parking_lot_number}} - {{lotDetails.parking_lot_name}}</p>\n        </div>\n        <div style=\"align-self: center\" class=\"pl-4 is-inline-flex-tablet is-inline-flex-widescreen is-inline-flex-desktop\">\n          <p style=\"align-self: center\" class=\"mr-4 is-size-7\">Additional details about this parking lot here.</p>\n          <div style=\"align-self: center\">\n            <p class=\"button m-1 is-small is-info\">Progress</p>\n          </div>\n        </div>\n      </div>\n      <div class=\"is-divider removeMargin\"></div>\n    </div>\n\n\n\n<!--DETAILED CONTENT BODY-->\n    <div class=\"card-content  px-5 py-0 \">\n        <div class=\"block p-0 bordering mb-6\" v-for=\"(addr,index) in addressColl.curatedAddresses\">\n\n<!--HEAD: ADDRESS AND LOT DETAILS-->\n            <div class=\"columns is-multiline px-2 py-3 topBordering has-background-white-bis\">\n              <div class=\"column\">\n                <div v-if=\"addressColl.getLength.edges.length > 1\">\n                  <p class=\"heading\">\n                    Address {{index + 1}}:\n                  </p>\n                  <p >\n                    {{addr.node.street_number}} {{addr.node.street_name}} Street <br> {{addr.node.city_details.city_name}} BC {{addr.node.street_postal_code}}\n                  </p>\n                </div>\n                <div v-if=\"addressColl.getLength.edges.length === 1\">\n                  <p class=\"heading\">\n                    Address:\n                  </p>\n                  <p>\n                    {{addr.node.street_number}} {{addr.node.street_name}} Street <br> {{addr.node.city_details.city_name}} BC {{addr.node.street_postal_code}}\n                  </p>\n                </div>\n              </div>\n              <SimpleDetails :address=\"addr\" :index=\"index\" :contacts=\"contactsColl\"/>\n\n            </div>\n\n\n  <!-- DAILY MONTHLY-->\n            <div class=\"columns is-multiline px-1 py-4 bottomBordering has-background-white\">\n\n              <SimpleDailyRates :daily=\"addr.node.daily_ratesCollection.edges\" :index=\"index\" :cityDetails=\"addr.node.city_details\" />\n\n                <div class=\"is-divider-vertical addingPadd is-hidden-touch\"></div>\n                <div class=\"is-divider is-hidden-tablet mx-5\" ></div>\n\n              <SimpleMonthlyRates :monthly=\"addr.node.monthly_ratesCollection.edges\" :cityDetails=\"addr.node.city_details\"/>\n            </div>\n\n          </div>\n\n      </div>\n  </div>\n\n</template>\n<style>\n  td, th{\n    text-align: center;\n    vertical-align: middle !important;\n  }\n\n  .rounding {\n    border-radius: 10px;\n    background-color: white;\n    border: 0.1rem solid lightgrey;\n  }\n\n  .bordering {\n    //border-radius: 12px;\n    //border: 0.8rem solid lightgrey;\n    //overflow: clip;\n    //-webkit-background-clip: padding-box;\n    //-moz-background-clip:    padding;\n    //background-clip: border-box;\n  }\n\n  .addingPadd {\n    padding: 1rem;\n  }\n\n  .removeMargin{\n    margin-bottom: 2rem;\n    margin-top: 0.5rem;\n  }\n\n  .test {\n    min-height: 105px\n  }\n\n\n\n\n</style>"],"names":["_sfc_main","_ssrRenderAttrs","_mergeProps","_ssrRenderList","_ssrInterpolate"],"mappings":"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"}